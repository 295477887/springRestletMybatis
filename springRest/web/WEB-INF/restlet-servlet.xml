<?xml version="1.0"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!--默认配置 -->
    <bean id="restletComponent" class="org.restlet.ext.spring.SpringComponent">
        <property name="defaultTarget" ref="root" />
    </bean>
    <bean id="root" class="org.restlet.ext.spring.SpringRouter">
        <property name="attachments">
            <map>
                <!-- 请求配置到这里 -->
                <entry key="/query">
                    <bean class="org.restlet.ext.spring.SpringFinder">
                        <lookup-method name="create" bean="query" />
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

    <!-- 配置bean，注入的话用property标签-->
    <bean id="query" class="com.chen.rest.QueryCar" scope="prototype">
        <property name="jdbcTemplate" ref="jdbcTemplate"></property>
        <property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
    </bean>


    <!--配置一个JdbcTemplate实例，并将这个“共享的”，“安全的”实例注入到不同的DAO类中去 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://192.168.0.176:3306/weizhang_new?useUnicode=true"/>
        <property name="user" value="weizhang" />
        <property name="password" value="weizhang" />
        <!-- 连接池启动时的初始值 -->
        <property name="initialPoolSize"> <value>15</value> </property>
        <property name="maxPoolSize" value="50" />
        <property name="minPoolSize" value="10" />
        <property name="maxIdleTime" value="600" />
        <property name="idleConnectionTestPeriod" value="360" />
        <property name="preferredTestQuery" value="select 1" />
        <property name="acquireIncrement" value="5" />
        <property name="acquireRetryAttempts" value="50" />
        <property name="acquireRetryDelay" value="1000" />
        <property name="breakAfterAcquireFailure" value="true" />
        <property name="autoCommitOnClose" value="false" />
        <property name="testConnectionOnCheckout" value="true" />
        <property name="maxStatements" value="100" />
        <property name="maxStatementsPerConnection" value="5" />
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件，**表示迭代查找,也可在sqlMapConfig.xml中单独指定xml文件-->
        <property name="mapperLocations" value="classpath:../sql/*.xml" />

    </bean>

    <!-- mybatis spring sqlSessionTemplate,使用时直接让spring注入即可 -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
    </bean>
</beans>